{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda Function resource stack creation using Amplify CLI",
    "Parameters": {
        "CloudWatchRule": {
            "Type": "String",
            "Default" : "NONE",
            "Description" : " Schedule Expression"
        },
        "deploymentBucketName": {
            "Type": "String"
        },
        "env": {
            "Type": "String"
        },
        "s3Key": {
            "Type": "String"
        }
        ,
    
    
    
        "storageListDBName": {
            "Type": "String",
            "Default": "storageListDBName"
            },
        
        "storageListDBArn": {
            "Type": "String",
            "Default": "storageListDBArn"
            },
        
        "storageListDBStreamArn": {
            "Type": "String",
            "Default": "storageListDBStreamArn"
            },
        
    
        
    
        "storageListItemDBName": {
            "Type": "String",
            "Default": "storageListItemDBName"
            },
        
        "storageListItemDBArn": {
            "Type": "String",
            "Default": "storageListItemDBArn"
            },
        
        "storageListItemDBStreamArn": {
            "Type": "String",
            "Default": "storageListItemDBStreamArn"
            },
        
    
        
    
        "storageApiKeyDBName": {
            "Type": "String",
            "Default": "storageApiKeyDBName"
            },
        
        "storageApiKeyDBArn": {
            "Type": "String",
            "Default": "storageApiKeyDBArn"
            },
        
        "storageApiKeyDBStreamArn": {
            "Type": "String",
            "Default": "storageApiKeyDBStreamArn"
            }
        
    
        
    
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
        "LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Metadata": {
            "aws:asset:path": "./src",
            "aws:asset:property": "Code"
          },
          "Properties": {
            "Code": {
                "S3Bucket": {
                    "Ref": "deploymentBucketName"
                },
                "S3Key": {
                    "Ref": "s3Key"
                }
            },
            "Handler": "index.handler",
            "FunctionName": {
                "Fn::If": [
                    "ShouldNotCreateEnvResources",
                    "TodoAPILambda",
                    {

                        "Fn::Join": [
                            "",
                            [
                                "TodoAPILambda",
                                "-",
                                {
                                    "Ref": "env"
                                }
                            ]
                        ]
                    }
                ]
            },
            "Environment": {
                "Variables" : {"ENV":{"Ref":"env"},"REGION":{"Ref":"AWS::Region"},"STORAGE_LISTDB_NAME":{"Ref":"storageListDBName"},"STORAGE_LISTDB_ARN":{"Ref":"storageListDBArn"},"STORAGE_LISTDB_STREAMARN":{"Ref":"storageListDBStreamArn"},"STORAGE_LISTITEMDB_NAME":{"Ref":"storageListItemDBName"},"STORAGE_LISTITEMDB_ARN":{"Ref":"storageListItemDBArn"},"STORAGE_LISTITEMDB_STREAMARN":{"Ref":"storageListItemDBStreamArn"},"STORAGE_APIKEYDB_NAME":{"Ref":"storageApiKeyDBName"},"STORAGE_APIKEYDB_ARN":{"Ref":"storageApiKeyDBArn"},"STORAGE_APIKEYDB_STREAMARN":{"Ref":"storageApiKeyDBStreamArn"}}
            },
            "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"] },
            "Runtime": "nodejs18.x",
            "Layers": [],
            "Timeout": 25
          }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "minieventapiLambdaRole6a0c5294",
                        {

                            "Fn::Join": [
                                "",
                                [
                                    "minieventapiLambdaRole6a0c5294",
                                    "-",
                                    {
                                        "Ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        }
        ,"lambdaexecutionpolicy": {
            "DependsOn": ["LambdaExecutionRole"],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "lambda-execution-policy",
                "Roles": [{ "Ref": "LambdaExecutionRole" }],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"],
                            "Resource": { "Fn::Sub": [ "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*", { "region": {"Ref": "AWS::Region"}, "account": {"Ref": "AWS::AccountId"}, "lambda": {"Ref": "LambdaFunction"}} ]}
                        }
                    ]
                }
            }
        }
        ,"AmplifyResourcesPolicy": {
            "DependsOn": ["LambdaExecutionRole"],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "amplify-lambda-execution-policy",
                "Roles": [{ "Ref": "LambdaExecutionRole" }],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{"Effect":"Allow","Action":["dynamodb:Put*","dynamodb:Create*","dynamodb:BatchWriteItem","dynamodb:PartiQLInsert","dynamodb:Get*","dynamodb:BatchGetItem","dynamodb:List*","dynamodb:Describe*","dynamodb:Scan","dynamodb:Query","dynamodb:PartiQLSelect","dynamodb:Update*","dynamodb:RestoreTable*","dynamodb:PartiQLUpdate","dynamodb:Delete*","dynamodb:PartiQLDelete"],"Resource":[{"Ref":"storageListDBArn"},{"Fn::Join":["/",[{"Ref":"storageListDBArn"},"index/*"]]}]},{"Effect":"Allow","Action":["dynamodb:Put*","dynamodb:Create*","dynamodb:BatchWriteItem","dynamodb:PartiQLInsert","dynamodb:Get*","dynamodb:BatchGetItem","dynamodb:List*","dynamodb:Describe*","dynamodb:Scan","dynamodb:Query","dynamodb:PartiQLSelect","dynamodb:Update*","dynamodb:RestoreTable*","dynamodb:PartiQLUpdate","dynamodb:Delete*","dynamodb:PartiQLDelete"],"Resource":[{"Ref":"storageListItemDBArn"},{"Fn::Join":["/",[{"Ref":"storageListItemDBArn"},"index/*"]]}]},{"Effect":"Allow","Action":["dynamodb:Get*","dynamodb:BatchGetItem","dynamodb:List*","dynamodb:Describe*","dynamodb:Scan","dynamodb:Query","dynamodb:PartiQLSelect"],"Resource":[{"Ref":"storageApiKeyDBArn"},{"Fn::Join":["/",[{"Ref":"storageApiKeyDBArn"},"index/*"]]}]}]
                }
            }
        }
        
        
        
    },
    "Outputs": {
        "Name": {
            "Value": {
                "Ref": "LambdaFunction"
            }
        },
        "Arn": {
            "Value": {"Fn::GetAtt": ["LambdaFunction", "Arn"]}
        },
        "Region": {
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "LambdaExecutionRole": {
            "Value": {
                "Ref": "LambdaExecutionRole"
            }
        }
        
    }
}
